// observation only set bits number possible in given range are
// 2^1 -1 , 2^2 -1 , 2^3 -1, ......., 2^10 -1 
// 1, 3, 7, 15, 31, ........, 1023
// can use this property

// Brute force solution Tc O(logn) Sc O(logn)
/*class Solution {
public:
    int smallestNumber(int n) {
        // precomputed all the numbers with only set bits in the given range
        vector<int>v;
        v.push_back(1);
        int x = 1;
        int prev = 1;
        while(prev<=1000){
            int curr = prev + x*2;
            v.push_back(curr);
            prev = curr;
            x = x*2;
        }
        // we find the lower bound for the n
        for(auto &it:v){
            if(it>=n){
                return it;
            }
        }
        return -1;

    }
};
*/
// Optimised Solution  TC O(logn)
class Solution {
public:
    int smallestNumber(int n) {
        // we find the lower bound for the n such that 2^x > n 
        int x = 1;
        while(x<=n){
            x = x*2;
        }
        return x-1;
    }
};
