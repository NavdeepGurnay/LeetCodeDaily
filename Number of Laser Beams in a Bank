// Brute force soltuion 
// TC O(m*n) SC O(n)
class Solution {
public:
    int numberOfBeams(vector<string>& bank) {
        int row = bank.size();
        int col = bank[0].size();
        int ans = 0;
        map<int,int>row_count;
        for(int i =0;i<row;i++){
            for(int j = 0;j<col;j++){
                if(bank[i][j] == '1'){
                    row_count[i]++;
                }
            }
        }
        int prev = -1;
        for(auto &it : row_count){
            if(prev != -1){
                ans += it.second*prev;     
            }
            prev = it.second;
        }
        return ans;
    }
};

// Optimised 
// TC O(n*m) SC O(1)
class Solution {
public:
    int numberOfBeams(vector<string>& bank) {
        int row = bank.size();
        int col = bank[0].size();
        int ans = 0;
        int prev_cnt = 0;
        for(int i =0;i<row;i++){
            int cnt = 0;
            for(int j = 0;j<col;j++){
                if(bank[i][j] == '1'){
                    cnt++;
                }
            }
            if(cnt > 0){
                ans += cnt*prev_cnt;
                prev_cnt = cnt;
            }
        }
        return ans;
    }
};
